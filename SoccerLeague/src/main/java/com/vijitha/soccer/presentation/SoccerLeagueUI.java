package com.vijitha.soccer.presentation;

import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * Bootstrap class and user interface in SWING UI.
 * 
 * @author Vijitha epa
 * 
 */
public class SoccerLeagueUI extends javax.swing.JFrame {

	private JFileChooser fc;
	private static final String PRE_SUCCESS_MESSAGE = "Teams has the smallest difference in ‘for’ and ‘against’ goals are : \n ==== >>> \t";

	/** Creates new form Find */
	public SoccerLeagueUI() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jTextField1 = new javax.swing.JTextField();
		btnLoad = new javax.swing.JButton();
		btnClose = new javax.swing.JButton();
		jPanel1 = new javax.swing.JPanel();
		jLabel2 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Soccer League");

		jLabel1.setText("File Location");

		jTextField1.setName("txtFile"); // NOI18N

		btnLoad.setText("Load");
		btnLoad.setName("btnLoad"); // NOI18N
		btnLoad.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnLoadActionPerformed(evt);
			}
		});

		btnClose.setText("Close");
		btnClose.setActionCommand("Close");
		btnClose.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCloseActionPerformed(evt);
			}
		});

		jLabel2.setBackground(new java.awt.Color(153, 142, 132));
		jLabel2.setFont(new java.awt.Font("Ubuntu", 2, 24)); // NOI18N
		jLabel2.setForeground(new java.awt.Color(146, 109, 109));
		jLabel2.setText("Soccer League : smallest difference in ‘for’ and ‘against’ goals");
		jLabel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

		org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
		                jPanel1Layout.createSequentialGroup()
		                                .addContainerGap()
		                                .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
		                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
		                jPanel1Layout.createSequentialGroup().addContainerGap()
		                                .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)));

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
		                .createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
		                .add(layout.createSequentialGroup()
		                                .addContainerGap()
		                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
		                                                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
		                                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                                                .add(layout.createSequentialGroup()
		                                                                .add(jLabel1)
		                                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
		                                                                .add(jTextField1)
		                                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
		                                                                .add(layout.createParallelGroup(
		                                                                                org.jdesktop.layout.GroupLayout.LEADING, false)
		                                                                                .add(btnLoad,
		                                                                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
		                                                                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
		                                                                                                Short.MAX_VALUE)
		                                                                                .add(org.jdesktop.layout.GroupLayout.TRAILING,
		                                                                                                btnClose,
		                                                                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
		                                                                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
		                                                                                                Short.MAX_VALUE))))
		                                .addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
		                org.jdesktop.layout.GroupLayout.TRAILING,
		                layout.createSequentialGroup()
		                                .addContainerGap()
		                                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
		                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
		                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
		                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 26, Short.MAX_VALUE)
		                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
		                                                .add(jLabel1)
		                                                .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
		                                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
		                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).add(btnLoad))
		                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(btnClose).addContainerGap()));

		btnClose.getAccessibleContext().setAccessibleName("btnClose");

		pack();
	}// </editor-fold>

	/**
	 * This Listener will be fired, When user clicks on the load button to brows
	 * the .dat file.
	 * 
	 * @param evt
	 */
	private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {
		TeamFinder teamScoreFinder = new TeamFinder();
		String result = "";

		if (fc == null) {
			fc = new JFileChooser();
		}

		try {
			int returnVal = fc.showDialog(SoccerLeagueUI.this, "Attach");

			if (returnVal == JFileChooser.APPROVE_OPTION) {
				File file = fc.getSelectedFile();
				result = PRE_SUCCESS_MESSAGE + teamScoreFinder.findTeamsForSmallestDiff(file.getAbsolutePath());
				System.out.println("Attaching file: " + file.getAbsolutePath() + ".");
			} else {
				result = "Attachment cancelled by user.";
			}
			JOptionPane.showMessageDialog(this, result);
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR! On reading file...", JOptionPane.ERROR_MESSAGE);
			e.printStackTrace();
		} finally {
			fc.setSelectedFile(null);

		}
	}

	/**
	 * This Listener will be fired, When user clicks on the close button to
	 * Exit.
	 * 
	 * @param evt
	 */
	private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {
		System.exit(0);
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels = javax.swing.UIManager.getInstalledLookAndFeels();
			for (int idx = 0; idx < installedLookAndFeels.length; idx++)
				if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
					javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
					break;
				}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(SoccerLeagueUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(SoccerLeagueUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(SoccerLeagueUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(SoccerLeagueUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new SoccerLeagueUI().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JButton btnClose;
	private javax.swing.JButton btnLoad;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JTextField jTextField1;
	// End of variables declaration

}
